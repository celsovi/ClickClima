# docker-compose.yml
version: '3.8'

services:
  db:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5
  web:
    build: .
    command: >
      sh -c "
        # Espera pelo Postgres estar pronto
        # Esta parte pode variar dependendo do seu sistema e das ferramentas disponíveis no contêiner
        until pg_isready -h db -p 5432 -U $$POSTGRES_USER -d $$POSTGRES_DB; do
          echo 'Waiting for PostgreSQL to be ready...'
          sleep 2
        done
        echo 'PostgreSQL is up and running. Applying migrations...'
        python manage.py migrate && gunicorn core.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
    env_file:
      - .env

volumes:
  postgres_data:

